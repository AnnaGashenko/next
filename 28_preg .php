<?php
/*
1. Числа
$x = 10;
$y = 5;
echo $x+$y;
$res = $y/$x; // 0.5
echo round($res); // округлит до 1
is_numeric()

2. Массивы: ... count(); array_sum;

3. Работа со строками:
mb_strlen('abc'); // 3
str_replace('Вас', 'Пет', 'Пети любят ананасы'); // Заменит "Васи любят ананасы"

// Например у нас есть IP код
// Мы не знаем какие будут цифры, но у нас есть правило что идет 4 числа и они разделяютмя точкой
// Для этого воспользуемся регулярными выражениями

25.10.12.100
256.256.256.256
1.1.11

// примерно наш запрос будет выглядить вот так:
Число от 0 до 255, за ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255

preg_replace <- str_replace 'Вас' - окончание одно из следующих: я, и, ю => 'Пет' + окончание : я, и, ю
preg_replace - аналогично str_replace, но можно задавать варианты
error_reporting(-1);
ini_set('display_errors',1);
header('Content-Type: text/html; charset=utf-8');


/*
str_replace - все строго, без вариантов
Вася -> Петя
Васи -> Пети
Васю -> Петю


1. preg_replace - делает замену (находит и заменяет на другое)
2. preg_match - ищет 1 совпадение
3. preg_match_all - ищет все совпадения

// Напимер найти слово в котором меньше 6 символов
"Пети любят ананассы"
preg_match // Пети
preg_match_all // массив array('Пети', 'любит')

// Примечание: совпадения ищутся по патерну pattern (поисковому фильтру, шаблон)

// Структура патерна:

$pattern = '#шаблон по которому идет поиск#свойства данного поиска';

Свойства:
u - UTF-8
i - Регистронезависимый поиск. а А б Б. Не по умолчанию
s - /s принимает не только пробелы, но и табуляцию и переносы строк
U - Отменяет жадный поиск
$pattern = '#шаблон по которому идет поиск#u';
*/
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$text = preg_replace('#Петя#u','ЗАМЕНА',$text);
echo $text;

















































