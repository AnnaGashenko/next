<?php
/*
СОКРАЩЕНИЯ
\d - числа
. - дюбой символ
\w - [-A-ZA-Я_]
// Включает в себя
англ. символы A-Z
кириллицу A-Я
тире и нижнее подчеркивание

1. preg_replace - делает замену (находит и заменяет на другое)
2. preg_match - ищет 1 совпадение
3. preg_match_all - ищет все совпадения

Свойства:
u - UTF-8
i - Регистронезависимый поиск. а А б Б. Не по умолчанию
s - /s принимает не только пробелы, но и табуляцию и переносы строк
U - Отменяет жадный поиск
$pattern = '#шаблон по которому идет поиск#u';


1. Числа
$x = 10;
$y = 5;
echo $x+$y;
$res = $y/$x; // 0.5
echo round($res); // округлит до 1
is_numeric()

2. Массивы: ... count(); array_sum;

3. Работа со строками:
mb_strlen('abc'); // 3
str_replace('Вас', 'Пет', 'Пети любят ананасы'); // Заменит "Васи любят ананасы"

// Например у нас есть IP код
// Мы не знаем какие будут цифры, но у нас есть правило что идет 4 числа и они разделяютмя точкой
// Для этого воспользуемся регулярными выражениями

25.10.12.100
256.256.256.256
1.1.11

// примерно наш запрос будет выглядить вот так:
Число от 0 до 255, за ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255

preg_replace <- str_replace 'Вас' - окончание одно из следующих: я, и, ю => 'Пет' + окончание : я, и, ю
preg_replace - аналогично str_replace, но можно задавать варианты
error_reporting(-1);
ini_set('display_errors',1);
header('Content-Type: text/html; charset=utf-8');



str_replace - все строго, без вариантов
Вася -> Петя
Васи -> Пети
Васю -> Петю


1. preg_replace - делает замену (находит и заменяет на другое)
2. preg_match - ищет 1 совпадение
3. preg_match_all - ищет все совпадения

// Напимер найти слово в котором меньше 6 символов
"Пети любят ананассы"
preg_match // Пети
preg_match_all // массив array('Пети', 'любит')

// Примечание: совпадения ищутся по патерну pattern (поисковому фильтру, шаблон)

// Структура патерна:

$pattern = '#шаблон по которому идет поиск#свойства данного поиска';

Свойства:
u - UTF-8
i - Регистронезависимый поиск. а А б Б. Не по умолчанию
s - /s принимает не только пробелы, но и табуляцию и переносы строк
U - Отменяет жадный поиск
$pattern = '#шаблон по которому идет поиск#u';

$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$text = preg_replace('#Петя#u','ЗАМЕНА',$text);
echo $text;

$text = preg_replace('#Пет#u','ЗАМЕНА',$text);
echo $text;


// Если мы напишем петя с маленькой буквы ничего не заменится
// Чтобы заменилось нужно добавить i - '#Пет#ui':
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$text = preg_replace('#Пет[яюи]#ui','ЗАМЕНА',$text);
echo $text;

[] - к квадратных скобках мы перечисляем, какой из символом может находится тут

// Отрицание ^ - будет любая буква, но  только не "в" - т.е. замена не произойдет
$text = preg_replace('#Пет[^в]#ui','ЗАМЕНА',$text);


// Перечисляем все буквы алфавита [а-яё]
// (ё - указываем отдельно, т.к. она проверяться не будет если не указать)
$text = preg_replace('#Пет[а-яё]#ui','ЗАМЕНА',$text);

// Английский алфавит
$text = preg_replace('#Пет[a-z]#ui','ЗАМЕНА',$text);

// Чтобы перечислить и маленькие и большие буквы абвгяАБВ
[а-Я]

// Но так как мы используем регистронезависый поиск i "[а-яё]#ui"
Нам достаточно [а-яё]

// preg_match - ищет 1 совпадение
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
// $count - счетчик
$count = preg_match('#Пет[а-яёa-z] любит#ui',$text,$matches);
// В $matches записывается найденые совпадения "Петя любит"
// $matches возвращается в виде массива
echo '<pre>'.print_r($matches,1);
// Возвращает либо 0 либо 1
Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Петя любит
)

// Например просим человека ввести имя в любом падеже
'Васю'
'Вас[а-я]'
если найдет совпадение $count = 1
если не найдет совпадение $count = 2


// Найти буквы "б"
// preg_match_all
$text = 'АааабббвввДпЖ';
echo $text.'<br><hr>';
$count = preg_match_all('#б#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

АааабббвввДпЖ
Array
(
    [0] => Array
        (
            [0] => б
            [1] => б
            [2] => б
        )

)

// Можем указать перечень совпадений
$count = preg_match_all('#[а-в]#ui',$text,$matches);

// Можем узнать количество найденых букв
echo 'Букв в слове '.$count;

Букв в слове10
Array
(
    [0] => Array
        (
            [0] => А
            [1] => а
            [2] => а
            [3] => а
            [4] => б
            [5] => б
            [6] => б
            [7] => в
            [8] => в
            [9] => в
        )

)


$text = 'АааабббвввДпЖ';
echo $text.'<br><hr>';
// первая буква должна быть в диапазоне [а-в]
// вторая буква должна быть в диапазоне [в-г]
$count = preg_match_all('#[а-в][в-г]#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

АааабббвввДпЖ
Array
(
    [0] => Array
        (
            [0] => бв  // в первую пару [а-в] входит совпадение бв
            [1] => вв // во вторую пару [а-в] входит совпадение вв
        )

)

// ^ - от начала строки
// $ - конец строки

$text = 'АввгдеЖ';
echo $text.'<br><hr>';
// первая буква должна быть в диапазоне [а-в]
// вторая буква должна быть в диапазоне [в-г]
$count = preg_match('#^а[а-я][а-я][а-я][а-я]еЖ$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

// Полное совпадение нашему шаблону
if(preg_match('#^а[а-я][а-я][а-я][а-я]еж$#ui',$text,$matches)){
	echo 'Мы нашли полное совпадение!';
} else {
	echo 'Совпадений НЕТ';
}


АввгдеЖ
Array
(
    [0] => АввгдеЖ
)
Мы нашли совпадение!

// Указываем сколько раз будет повторяться правило
[а-я] - 4 символа


'#Вася#'
В{1}а{1}с{1}я{1} // повторение буквы 1 раз, но оно стоит по умолчанию
В{1} - В
В{1} - ВВВВВ // будет искать 5 букв В подряд (4 не подходит)


// Чтобы не писать 4 раза одно и тоже сокращаем
$count = preg_match('#^а[а-я][а-я][а-я][а-я]еЖ$#ui',$text,$matches);
$count = preg_match('#^а[а-я]{4}еЖ$#ui',$text,$matches);

// Например мы знаем, что корень слова "Вас"
Есть  слова: Вася, Васей - т.е. после корня может идти как 1 так и 2 буквы
Вас[а-яё]{1,2} // {min, max}(min количество совпадени и max)одна или 2 буквы 
Вас[а-яё]{1,} // max - не указан, означает бесконечность
Вас[а-яё]{0,2} // {min = 0, может быть совпадение, а может и не быть



                           <!--СОКРАЩЕНИЯ КОЛИЧЕСТВА-->
{0,} // вместо от 0 до бесконечности --> "*"
Вас[а-яё]*
{1,} // вместо от 1 до бесконечности --> "+"
Вас[а-яё]+
{0,1} // вместо от 0 до 1 --> "?"
Вас[а-яё]? // Пример Вася? = Вас или Вася (я может быть, а может не быть)



// Найти все слова где есть П {0,}
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#П[а-яё]*#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => Петя
            [1] => папуасы
        )

)
Найдено 2 совпадений


// Найти все слова где есть П {0,} -> с конца строки "$"
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#П[а-яё]*$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

// т.к. в конце строки только одно слово 'папуасы' 
// после слова Петя идет слово любит - это не конец строки
Array
(
    [0] => Array
        (
            [0] => папуасы
        )

)
Найдено 1 совпадений

// Например условие, чтобы пепед А было минимум 2 символа

$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#[а-яё]{2,6}А[а-яё]*#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => ананасы // перед 2-й "а" - 4 символа, это больше 2
            [1] => корабли
            [2] => папуасы // перед 2-й
        )

)
Найдено 3 совпадений


$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#Вася\s+[а-яё]+#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

// Дополнительные сокращения:

\s - воспринимает ПРОБЕЛ + ТАБУЛЯЦИЯ + ПЕРЕНОС СТРОКИ
. <- абсолютно любой символ
\. <- точка


$text = 'Ва_.ся любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
// После В 3 любых символа -> В.{3}
$count = preg_match_all('#В.{3}#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';


Ва_.ся любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => Ва_.
            [1] => вут 
        )

)
Найдено 2 совпадений

// Если мы хотим, чтобы повторялось слово 5 раз, берем слово в скобки
(Стас){5} -> СтасСтасСтасСтасСтас - ВЕРНО
СтасСтасСтасАндрей - НЕ ВЕРНО // нужно только 5


СОКРАЩЕНИЯ
\d - числа
. - дюбой символ
\w - [-A-ZA-Я_]
// Включает в себя
англ. символы A-Z
кириллицу A-Я
тире и нижнее подчеркивание

// Присмер
'#1{2}3{3}[а-я]{0,1}#iu'
// Ищем от 0 до 9 {совпадений от 1 до бесконечности} 
[0-9]{1,} == \d+ // сокращенный вариант

// Сокращенно можно написать
// все цифры и буквы от а до я
[\dа-я]*

| - знак ИЛИ

$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
// После к - стоит а ИЛИ о, вывести еще любых (.) 13 символов после слова "кораблик"
$count = preg_match_all('#к(о|а)раблик.{13}#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => кораблик, а на юге жи
        )

    [1] => Array
        (
            [0] => о
        )

)
Найдено 1 совпадений



$var = 10;
// нам нужен диапазон от 0-100
// нужно указать полное совпадение с начала и с конца #^ $#
// будет от 0-99 ИЛИ 100
'#^([0-9]{1,2}|100)$#'
// если не указать - он будет искать и в середине
1991 = '99' // найдет в середине 99

// IP
10.211.244.2
// отфильтрует число от 0-255
0-255 = [0-9]{1,2}|1[0-9]{2}|2([0-4][0-9]|5[0-5])
// аналогично
$i = 255;
if($i >= 0 && $i <=255)


[0-9]{2} // 2 символов в диапазоне от 0-99
// если первое число 1 - то от 0-99 
1[0-9]{1,2} // от 100-199 -> 1[00]-1[99]
// если первое число 2 
2[0-4][0-9] // 2(00-49) -> 2[00]-2[49] -> 200-249
// первое число 2 -> 5 -> [0-5] -> 5[0]-5[5] -> 50-55
2(5[0-5])

----------------------------------------------------------------------

2(00-49 | 50-55)

0-99
100-199
200-255
249
[0-4][0-9]
5[0-5]


// IP
255.211.244.255
[0-9]{1,2}|1[0-9]{2}|2([0-4][0-9]|5[0-5])\.[0-9]{1,2}|1[0-9]{2}|2([0-4][0-9]|5[0-5])\.
[0-9]{1,2}|1[0-9]{2}|2([0-4][0-9]|5[0-5])\.[0-9]{1,2}|1[0-9]{2}|2([0-4][0-9]|5[0-5])

// preg_quote - экранирует спец символы
$x = preg_quote('aa#~"/');
// экранируем вручную
// \<td class=\"news_title\" width=\"200\"\>Заголовок товара\<\/td\>
 
// экранируем c помощью preg_quote
$code = preg_quote('<td class="news_title" width="200">Заголовок товара</td>');
preg_replace('#[0-9]{2}'.$code.'#');


$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
// Какое слово перед "ананасы"
// \w+ - любые буквы, но не пробелы, по-этому перед пробелом он остановится 
// {1,}  вместо от 1 до бесконечности --> "+"
// \s - пробелы, табуляции
$count = preg_match_all('#\w+\sананасы#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => любит ананасы
        )

)
Найдено 1 совпадений


// Но нам нужно получить слово только которое перед "ананасы" само слово "ананасы" нет
// Делаем кармашки - то, что мы хотим найти помещаем в кармашек (\w+)
$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#(\w+)\sананасы#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => любит ананасы
        )

    [1] => Array
        (
            [0] => любит
        )

)
Найдено 1 совпадений


// Можно ананассы тоже положить в кормашек
$count = preg_match_all('#(\w+)\s(ананасы)#ui',$text,$matches);

// Чтобы вывести найденной слово
echo $maches[1][0]; //[1] => Array  [0] => любит

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array // Находится вся поисковая строка #(\w+)\s(ананасы)#
        (
            [0] => любит ананасы
        )

    [1] => Array // Под цифрой 1 - первый кармашек
        (
            [0] => любит
        )

    [2] => Array // Под цифрой 2 - второй кармашек
        (
            [0] => ананасы
        )

)



// Заменем найденный текст
$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_replace('#(\w+)\sананасы#ui','ЗАМЕНА НАЙДЕННОГО',$text);
echo $count;

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Вася ЗАМЕНА НАЙДЕННОГО, Петя любит кораблик, а на юге живут папуасы


// Найти и заменить найденное на найденное

$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_replace('#(\w+)\s(ананасы)#ui','<b>\\0</b>',$text);
echo $count;

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
// любит ананасы - будет выделен жирным
Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы

\\0 = '(\w+)\s(ананасы)' - все содержимое
\\1 = '(\w+)' - первый кармашек
\\2 = '(ананасы)' - второй кармашек


ЖАДНЫЙ ПОИСК - ОТМЕНА ЖАДНОГО ПОИСКА U
// Найти слове ммежду тегами <b>
// Жажный поиск возмет первый и самы посдений закрывающийся тэг
// <b>Вася</b> любит ананасы, Петя любит <b>кораблик</b>, а на юге <b>живут</b>

// Не жадный первый открывающийся и первый закрывающийся <b>Вася</b>
$text = '<b>Вася</b> любит ананасы, Петя любит <b>кораблик</b>, а на юге <b>живут</b> папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#'.preg_quote('<b>').'.*'.preg_quote('</b>').'#uiU',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => Вася
            [1] => кораблик
            [2] => живут
        )

)

// Нужно найти все, что находится в диве
$text = '<b>Вася</b> любит ананасы, Петя любит <b>кораблик</b>, а на юге <b>живут</b> папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#^'.preg_quote('<div class="menu">').'(.*)'.preg_quote('</div>').'#uiU',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';


// Проверяем логин
$text = ' inpost ';
// Убираем пробелы в начале и в конце проедложения
if(trim($text) != $text) {
	echo 'Не ставьте пробелы в начале или в конце строки!';	
} else {
	// логин от 3 до 8 символов
	if(preg_match('#^[\wё\s]{3,18}$#ui',$text)) {
		echo 'Верный логин!';
	} else {
		echo 'Плохой логин!';
	}
}
// Выдаст: Не ставьте пробелы в начале или в конце строки!

$text = 'Вася Пупкин';
// Выдаст: Верный логин!

//Если будут в логине спец символы
$text = 'Вася Пуп!кин';
// Выдаст: Плохой логин!


// нам не нужны логин типа
// %%%|||%%% 
	




$login = array(
    'Ваш логин: Inpost. Добро пожаловать',
    'Ваш логин: Николайёёёёёёёёё. Добро пожаловать',
    'Ваш логин: Анна Семинович. Добро пожаловать',
    'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);
  
foreach ($login as $v) {
	if(preg_match_all('#\:\s(\w+)#ui',$v,$matches)) {
		echo 'Найден логин: <b>'.$matches[1][0]. '</b><br>';
	} else {
		echo 'Логин не найден, учите лучше регулярки <br>';
	}
}
/*
$login = 'Ваш логин: Inpost. Добро пожаловать';
echo $login.'<br><hr>';
$count = preg_match_all('#\:\s(\w+)#ui',$login,$matches);
echo 'Найден логин: <b>'.$matches[1][0]. '</b>';




$text = ' inpost ';
// Убираем пробелы в начале и в конце проедложения
if(trim($text) != $text) {
	echo 'Не ставьте пробелы в начале или в конце строки!';	
} else {
	// логин от 3 до 8 символов
	if(preg_match('#^[\wё\s]{3,18}$#ui',$text)) {
		echo 'Верный логин!';
	} else {
		echo 'Плохой логин!';
	}
}



// Но нам нужно получить слово только которое перед "ананасы" само слово "ананасы" нет
// Делаем кармашки - то, что мы хотим найти помещаем в кармашек (\w+)
$text = 'Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#(\w+)\sананасы#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => любит ананасы
        )

    [1] => Array
        (
            [0] => любит
        )

)
Найдено 1 совпадений


// Можно ананассы тоже положить в кормашек
$count = preg_match_all('#(\w+)\s(ананасы)#ui',$text,$matches);

// Чтобы вывести найденной слово
echo $maches[1][0]; //[1] => Array  [0] => любит

Вася любит ананасы, Петя любит кораблик, а на юге живут папуасы
Array
(
    [0] => Array // Находится вся поисковая строка #(\w+)\s(ананасы)#
        (
            [0] => любит ананасы
        )

    [1] => Array // Под цифрой 1 - первый кармашек
        (
            [0] => любит
        )

    [2] => Array // Под цифрой 2 - второй кармашек
        (
            [0] => ананасы
        )

)




$array = array(
	'file.jpg',
	'zzz.png',
	'afafaf.php',
	'quad.jpg.',
	'quad2.JPG',
	'quad3.jpg.vir',
	'gif.doc',
	'file.virus',
);


foreach ($array as $v) {
	if(preg_match_all('#[jpg|png|gif]$#ui',$v,$matches)) {
		echo 'Найден файл: <b>'.$v. '</b><br>';
	} 
}


$text = 'file.jpg.';
echo $text.'<br><hr>';
// После к - стоит а ИЛИ о, вывести еще любых (.) 13 символов после слова "кораблик"
$count = preg_match_all('#[jpg|png|gif]{3}$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';



$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
echo $text.'<br><hr>';
$count = preg_match_all('#^.+$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';


if(preg_match_all('#\w+#ui',$text,$matches)) {
		echo 'Найдено слово: <b>'.$matches. '</b><br>';
	} else {
		echo 'Логин не найден, учите лучше регулярки <br>';
	}


$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
foreach ($array as $v) {
	if(preg_match_all('#^.+$#ui',$v,$matches)) {
		echo 'Найдена строка: <b>'.$matches[0][0]. '</b><br>';
	} 
}


//'Получить все английские слова.',
$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
echo $text.'<br><hr>';
$count = preg_match_all('#[a-z]+#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';

$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);
foreach ($array as $v) {
	if(preg_match_all('#[a-z]+#ui',$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';
	} 
}


//'Получить слова, которые стоят после точки. Обращаю внимание, что пробел после точки может БЫТЬ и даже не один, а может и не быть, символ пробела: \s',
$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);


foreach ($array as $v) {
	if(preg_match_all('#\.\s*(\w+)#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}



$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
echo $text.'<br><hr>';
$count = preg_match_all('#\.\s*(\w+)#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений: <br>';

foreach ($matches[1] as $v) {
		echo $v.'<br>';
}




//'Необходимо получить 5 символ от начала строки. Начало строки: ^ , и не забудем использовать кармашек, чтобы туда ушел нужный нам символ',

$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);
foreach ($array as $v) {
	if(preg_match_all('#^([\w\s]{5})#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}

$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
echo $text.'<br><hr>';
$count = preg_match_all('#^([\w\s]{5})#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';


//	'Получить все слова, в которых первым символ будет начинаться с большой буквы. Подсказка, необходимо использовать 2 квадратных скобки!',

$array = array(
	'10 , 22, 2.1, 2.5, 10.10, 500.1, 77, 10.11.12.13',
);

foreach ($array as $v) {
	if(preg_match_all('#(\d+\.\d+)\,#u',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}


foreach ($array as $v) {
	if(preg_match_all('#\w+\.[jpg|png|gif]{3}$#ui',$v,$matches)) {
		foreach ($matches[0] as $find) {
			echo '<pre>'.print_r($matches,1).'<hr>';
			echo $find.'<br>';
		}	
	} 
}



$text = 'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!';
echo $text.'<br><hr>';
$count = preg_match_all('#[A-ZА-Я][a-zа-я|A-ZА-Я]+#u',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';


$numbers = array(101, 314, 606);
foreach($numbers as &$v) $v++;
echo "Элементы массива: ";
foreach($numbers as $elt) echo "$elt";

$array = array(
	'inpost',
	'Barabulka_ru',
	'Zimbabwe.ru',
	'Max',
	'Yojik',
	'Иван Тарасов',
	'Ёжик',
	'Борис Николаевич Кощуновский',
	'Ооооооооооооооооооооочень длинное имя',
	'Я',
	'go->drink->die',
	'Don`t sleep',
	'<Пивасик',
	'1',
	'123456789',
	'77777',
	'7ф777я7',
);

//	'Пропустить только строки, состоящие из цифр 7 и символов ф,я',

foreach ($array as $v) {
	if(preg_match('#^[7фя]+$#ui',$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';
	} 
}
//Состоит ли строка только из букв, цифр и "_", длиной от 8 до 20 символов:
//if (preg_match("/^[a-zа-я0-9_]{8,20}$/",$string)) echo "yes"; else echo "no";



//'Проверка на preg_match, разрешить только числам. Подсказка: числа точно так же как и буквы, а именно 0-9 (а-я)',

foreach ($array as $v) {
	if (preg_match("#^\d+$#ui",$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';	
	}
}



////'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов',
foreach ($array as $v) {
	if (preg_match("#^[a-zа-я\_\-\s]{4,15}$#ui",$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';	
	}
}


//'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов',
/*

foreach ($array as $v) {
	if(preg_match_all('#(\d+\.\d+)\,#u',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}


//'Выбрать логин, который начинается на M и заканчивается на x , я говорю про Max',

foreach ($array as $v) {
	if(preg_match_all('#^M\w+x$#u',$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';
	} 
}


//Граница слова (\b) - это мнимая точка между символами \w и \W. Внутри класса символов '\b' обозначает символ backspace (стирания).
// будет искать только слово web
if (preg_match("/\bweb\b/i", "PHP is the website scripting language of choice.")) {
    echo "Вхождение найдено.";
} else {
    echo "Вхождение не найдено.";
}

// Вхождение не найдено.




//	'Пропустить только строки, состоящие из цифр 7 и символов ф,я',


$array = array(
    'main', // yes
    'READ', // yes
    'news"&\\/files', // no
	'../../index', // no
	'news', // yes
	'kill_crash-and-destroy',
	'loveYou', // yes
);
/*
Проверить допустимые имена файлов
      Важно заметить, что мы в юникс-системе будем использовать как большие, так и маленькие символы.
	  Необходимо недопустить попадания ТОЛЬКО запрещенных файловой системой имён, а так же попытки перейти между каталогами'



foreach ($array as $v) {
	if(preg_match_all('#^[^//\..\@\"\\\&\|\*\:\<\>\?]+$#ui',$v,$matches)) {
		echo '<pre>'.print_r($matches,1).'<hr>';
	} 
}


$text = 'Я тебя ооооочеень            СИЛЬНО            ЛЮБЛЮ          МОЙ                    ДругБорис! Цёми-Цёми,    Пративный!';
if(preg_replace('#\s{2,}#ui',' ',$text)) {
	echo $text;
} 



$array = array(
	'<a href="file.php">Это ссылка, и тут было классно</a>',
	'<a    href     =       "file.php"     >Это ссылка, и тут было классно</a>',
	'<a    href=file.php >Это ссылка, и тут было классно</a>',
	"<a    href='file.php' >Это ссылка, и тут было классно</a>",
);



$q = array(
	'Используем карманы, необходимо получить путь, куда ссылается и текст внутри тега!
	 Стоит обратить внимание на момент, где символ МОЖЕТ БЫТЬ, а может и не БЫТЬ',
);



foreach ($array as $v) {
	if(preg_match_all('#^\<a\s+href\s*\=\s*\"([a-z]+\.[a-z]{3})\"\s*\>(.+)\<\/a\>#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo 'Путь = '.$find.'<br>';
		}	
		foreach ($matches[2] as $find) {
			echo 'Текст = '.$find.'<br>';
		}	
	} 
}

$array = array(
	'Дата публикации:27 августа 08:43. Был отличный год!',
);

//'Время, когда опубликовали',

foreach ($array as $v) {
	if(preg_match_all('#(\d{2}\:\d{2})#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo 'Время публикации  '.$find.'<br>';
		}	
	} 
}


$array = array(
    'Ваш логин: Inpost. Добро пожаловать',
    'Ваш логин: Николай. Добро пожаловать',
    'Ваш логин: Анна Семинович. Добро пожаловать',
    'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);

$q = 'Поиском достать логин. 
      Особенности: логин стоит после двухиточия, может представлять из себя рус и англ символы, пробелы, тире и подчеркивание. 
	  Для для того, чтобы достать чистый логин, воспользуемся карманом (скобками)';
	  
// РЕШЕНИЕ_1	  
  
foreach ($array as $v) {
	if(preg_match_all('#\:\s*(\w+)#ui',$v,$matches)) {
echo '<pre>'.print_r($matches,1).'<hr>';
	}
}

echo '<pre>'.print_r($matches,1).'<hr>';



$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

foreach ($array as $v) {
	if(preg_match_all('#^([\w.]{5})#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}


$array = array(
    'Ваш логин: Inpost. Добро пожаловать',
    'Ваш логин: Николай. Добро пожаловать',
    'Ваш логин: Анна Семинович. Добро пожаловать',
    'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);

$q = 'Поиском достать логин. 
      Особенности: логин стоит после двухиточия, может представлять из себя рус и англ символы, пробелы, тире и подчеркивание. 
	  Для для того, чтобы достать чистый логин, воспользуемся карманом (скобками)';
	  
// РЕШЕНИЕ_1	  
  
foreach ($array as $v) {
	if(preg_match_all('#\:\s*(\w+)#ui',$v,$matches)) {
echo '<pre>'.print_r($matches,1).'<hr>';
	}
}
$array = array(
	'text@',
	'yandex@@mega.com',
	'beer@mail.com',
	"inpost.dp.ua",
	"inpostdpua@gmail.com",
);


$q = array(
	'Проверить на валидность е-мейла. Краткая информация (ВАЖНАЯ!), емеил состоит из набора символов маленьких. 
	 Присутствует в центре собака, слева имя ящика, которое может состоять из обычных символов англ И подчеркивания И тире.
	 Справа находятся домены, отделенные точками.',
);

foreach ($array as $v) {
	if(preg_match_all('#([a-z\_\-]+@[a-z]+\.[a-z]+)#u',$v,$matches)) {
		echo 'Найден е-мейл: <b>'.$matches[1][0]. '</b><br>';
	}
}

$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);

// 	'Получить ссылки на реальные сайты (обязательно доменное имя), где имя сайта zimbabwe',
$code = preg_quote('http://');
foreach ($array as $v) {
	if(preg_match('#('.$code.')*(www\.)*zimbabwe\.[a-z]+[\.a-z]*#ui',$v,$matches)) {
		echo $matches[0].'<br>';
	} 
}

$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

//'Необходимо получить 5 символ от начала строки. Начало строки: ^ , и не забудем использовать кармашек, чтобы туда ушел нужный нам символ',
foreach ($array as $v) {
	if(preg_match_all('#^.{4}(.)#ui',$v,$matches)) {
		foreach ($matches[1] as $find) {
			echo $find.'<br>';
		}	
	} 
}

$array = array(
	 '10 , 22, 2.1, 2.5, 10.10, 77, 10.11.12.13, 500.1'
);

$q = array(
	'Достать ВСЕ дробные числа. Дробные - это числа, разделенные точкой',
);

// РЕШЕНИЕ_5	 
foreach ($array as $v) {
	if(preg_match_all('#(?:^|[^\.\d])(\d+\.\d+)(?:$|[^\.\d])#u',$v,$matches)) {
    	echo '<pre>'.print_r($matches,1).'<hr>';
	} 
}
/*(^|[^\.\d])Или начало строки, или символ не точка и не цифра. То есть в связке 555 чтобы регулярка не разбивала 5 и 55, чтобы было целым числом 555.
?: - чтобы  не попадало в карман


$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);

$code = preg_quote('http://');
foreach ($array as $v) {
	if(!preg_match('#^'.$code.'[a-z]+\.[a-z]+[\.a-z]*#ui',$v,$matches)) {
		echo 'http://'.$v.'<br>';
	} else {
		echo $v.'<br>';
	}
}



$array = array(
	'<a href="file.php">Это ссылка, и тут было классно</a>',
	'<a    href     =       "file.php"     >Это ссылка, и тут было классно</a>',
	'<a    href=file.php >Это ссылка, и тут было классно</a>',
	"<a    href='file.php' >Это ссылка, и тут было классно</a>",
);

$q = array(
	'Используем карманы, необходимо получить путь, куда ссылается и текст внутри тега!
	 Стоит обратить внимание на момент, где символ МОЖЕТ БЫТЬ, а может и не БЫТЬ',
);


$search = array ("'<script[^>]*?>.*?</script>'si",  // Strip out javascript
                 "'<[\/\!]*?[^<>]*?>'si",           // Strip out html tags
                 "'([\r\n])[\s]+'",                 // Strip out white space
                 "'&(quot #34);'i",                 // Replace html entities
                 "'&(amp #38);'i",
                 "'&(lt #60);'i",
                 "'&(gt #62);'i",
                 "'&(nbsp #160);'i",
                 "'&(iexcl #161);'i",
                 "'&(cent #162);'i",
                 "'&(pound #163);'i",
                 "'&(copy #169);'i",
                 "'&#(\d+);'e");                    // evaluate as php

$replace = array ("",
                  "",
                  "\\1",
                  "\"",
                  "&",
                  "<",
                  ">",
                  " ",
                  chr(161),
                  chr(162),
                  chr(163),
                  chr(169),
                  "chr(\\1)");

$text = preg_replace ($search, $replace, $matches);
    	echo '<pre>'.print_r($text).'<hr>';

$string = "The quick brown fox jumped over the lazy dog.";

$patterns[0] = "/quick/";
$patterns[1] = "/brown/";
$patterns[2] = "/fox/";

$replacements[2] = "bear";
$replacements[1] = "black";
$replacements[0] = "slow";

echo preg_replace($patterns, $replacements, $string);

$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);
$code = preg_quote('http://');
foreach ($array as $k => $v) {
	if(!preg_match('#^'.$code.'.*#ui',$v,$matches)) {
		$array[$k] = 'http://'.$v;
		echo $array[$k].'<hr>';
	} else {
		echo $array[$k].'<hr>';
	}
}
*/

$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);

foreach ($array as $k => $v) {
	if(!preg_match('#(.+)\.[a-z]+$#ui',$v,$matches)) {
		$array[$k] = $v.'.ru';
		echo $array[$k].'<hr>';
	} else {
		echo $array[$k].'<hr>';
	}
}


$array = array(
	'text@',
	'yandex@@mega.com',
	'beer@mail.com',
	"inpost.dp.ua",
	"inpostdpua@gmail.com",
	"admin@inpost.dp.ua",

);


$q = array(
	'Проверить на валидность е-мейла. Краткая информация (ВАЖНАЯ!), емеил состоит из набора символов маленьких. 
	 Присутствует в центре собака, слева имя ящика, которое может состоять из обычных символов англ И подчеркивания И тире.
	 Справа находятся домены, отделенные точками.',
);

// РЕШЕНИЕ_11
foreach ($array as $v) {
	if(preg_match('#([a-z\_\-]+@[a-z]+\.[a-z]+\.?[a-z]*)#u',$v,$matches)) {
		echo 'Найден е-мейл: <b>'.$matches[0]. '</b><br>';
	}
}




















