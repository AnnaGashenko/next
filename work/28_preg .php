<?php
/*
1. Числа
$x = 10;
$y = 5;
echo $x+$y;
$res = $y/$x; // 0.5
echo round($res); // округлит до 1
is_numeric()

2. Массивы: ... count(); array_sum;

3. Работа со строками:
mb_strlen('abc'); // 3
str_replace('Вас', 'Пет', 'Пети любят ананасы'); // Заменит "Васи любят ананасы"

// Например у нас есть IP код
// Мы не знаем какие будут цифры, но у нас есть правило что идет 4 числа и они разделяютмя точкой
// Для этого воспользуемся регулярными выражениями

25.10.12.100
256.256.256.256
1.1.11

// примерно наш запрос будет выглядить вот так:
Число от 0 до 255, за ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255, за  ним идет точка,
за ним идет опчть число от 255

preg_replace <- str_replace 'Вас' - окончание одно из следующих: я, и, ю => 'Пет' + окончание : я, и, ю
preg_replace - аналогично str_replace, но можно задавать варианты
error_reporting(-1);
ini_set('display_errors',1);
header('Content-Type: text/html; charset=utf-8');


/*
str_replace - все строго, без вариантов
Вася -> Петя
Васи -> Пети
Васю -> Петю


1. preg_replace - делает замену (находит и заменяет на другое)
2. preg_match - ищет 1 совпадение
3. preg_match_all - ищет все совпадения

// Напимер найти слово в котором меньше 6 символов
"Пети любят ананассы"
preg_match // Пети
preg_match_all // массив array('Пети', 'любит')

// Примечание: совпадения ищутся по патерну pattern (поисковому фильтру, шаблон)

// Структура патерна:

$pattern = '#шаблон по которому идет поиск#свойства данного поиска';

Свойства:
u - UTF-8
i - Регистронезависимый поиск. а А б Б. Не по умолчанию
s - /s принимает не только пробелы, но и табуляцию и переносы строк
U - Отменяет жадный поиск
$pattern = '#шаблон по которому идет поиск#u';

$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$text = preg_replace('#Петя#u','ЗАМЕНА',$text);
echo $text;

$text = preg_replace('#Пет#u','ЗАМЕНА',$text);
echo $text;


// Если мы напишем петя с маленькой буквы ничего не заменится
// Чтобы заменилось нужно добавить i - '#Пет#ui':
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$text = preg_replace('#Пет[яюи]#ui','ЗАМЕНА',$text);
echo $text;

[] - к квадратных скобках мы перечисляем, какой из символом может находится тут

// Отрицание ^ - будет любая буква, но  только не "в" - т.е. замена не произойдет
$text = preg_replace('#Пет[^в]#ui','ЗАМЕНА',$text);


// Перечисляем все буквы алфавита [а-яё]
// (ё - указываем отдельно, т.к. она проверяться не будет если не указать)
$text = preg_replace('#Пет[а-яё]#ui','ЗАМЕНА',$text);

// Английский алфавит
$text = preg_replace('#Пет[a-z]#ui','ЗАМЕНА',$text);

// Чтобы перечислить и маленькие и большие буквы абвгяАБВ
[а-Я]

// Но так как мы используем регистронезависый поиск i "[а-яё]#ui"
Нам достаточно [а-яё]

// preg_match - ищет 1 совпадение
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
// $count - счетчик
$count = preg_match('#Пет[а-яёa-z] любит#ui',$text,$matches);
// В $matches записывается найденые совпадения "Петя любит"
// $matches возвращается в виде массива
echo '<pre>'.print_r($matches,1);
// Возвращает либо 0 либо 1
Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Петя любит
)

// Например просим человека ввести имя в любом падеже
'Васю'
'Вас[а-я]'
если найдет совпадение $count = 1
если не найдет совпадение $count = 2


// Найти буквы "б"
// preg_match_all
$text = 'АааабббвввДпЖ';
echo $text.'<br><hr>';
$count = preg_match_all('#б#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

АааабббвввДпЖ
Array
(
    [0] => Array
        (
            [0] => б
            [1] => б
            [2] => б
        )

)

// Можем указать перечень совпадений
$count = preg_match_all('#[а-в]#ui',$text,$matches);

// Можем узнать количество найденых букв
echo 'Букв в слове '.$count;

Букв в слове10
Array
(
    [0] => Array
        (
            [0] => А
            [1] => а
            [2] => а
            [3] => а
            [4] => б
            [5] => б
            [6] => б
            [7] => в
            [8] => в
            [9] => в
        )

)


$text = 'АааабббвввДпЖ';
echo $text.'<br><hr>';
// первая буква должна быть в диапазоне [а-в]
// вторая буква должна быть в диапазоне [в-г]
$count = preg_match_all('#[а-в][в-г]#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

АааабббвввДпЖ
Array
(
    [0] => Array
        (
            [0] => бв  // в первую пару [а-в] входит совпадение бв
            [1] => вв // во вторую пару [а-в] входит совпадение вв
        )

)

// ^ - от начала строки
// $ - конец строки

$text = 'АввгдеЖ';
echo $text.'<br><hr>';
// первая буква должна быть в диапазоне [а-в]
// вторая буква должна быть в диапазоне [в-г]
$count = preg_match('#^а[а-я][а-я][а-я][а-я]еЖ$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1);

// Полное совпадение нашему шаблону
if(preg_match('#^а[а-я][а-я][а-я][а-я]еж$#ui',$text,$matches)){
	echo 'Мы нашли полное совпадение!';
} else {
	echo 'Совпадений НЕТ';
}


АввгдеЖ
Array
(
    [0] => АввгдеЖ
)
Мы нашли совпадение!

// Указываем сколько раз будет повторяться правило
[а-я] - 4 символа


'#Вася#'
В{1}а{1}с{1}я{1} // повторение буквы 1 раз, но оно стоит по умолчанию
В{1} - В
В{1} - ВВВВВ // будет искать 5 букв В подряд (4 не подходит)


// Чтобы не писать 4 раза одно и тоже сокращаем
$count = preg_match('#^а[а-я][а-я][а-я][а-я]еЖ$#ui',$text,$matches);
$count = preg_match('#^а[а-я]{4}еЖ$#ui',$text,$matches);

// Например мы знаем, что корень слова "Вас"
Есть  слова: Вася, Васей - т.е. после корня может идти как 1 так и 2 буквы
Вас[а-яё]{1,2} // {min, max}(min количество совпадени и max)одна или 2 буквы 
Вас[а-яё]{1,} // max - не указан, означает бесконечность
Вас[а-яё]{0,2} // {min = 0, может быть совпадение, а может и не быть



                           <!--СОКРАЩЕНИЯ КОЛИЧЕСТВА-->
{0,} // вместо от 0 до бесконечности --> "*"
Вас[а-яё]*
{1,} // вместо от 1 до бесконечности --> "+"
Вас[а-яё]+
{0,1} // вместо от 0 до 1 --> "?"
Вас[а-яё]? // Пример Вася? = Вас или Вася (я может быть, а может не быть)



// Найти все слова где есть П {0,}
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#П[а-яё]*#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => Петя
            [1] => папуасы
        )

)
Найдено 2 совпадений


// Найти все слова где есть П {0,} -> с конца строки "$"
$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#П[а-яё]*$#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

// т.к. в конце строки только одно слово 'папуасы' 
// после слова Петя идет слово любит - это не конец строки
Array
(
    [0] => Array
        (
            [0] => папуасы
        )

)
Найдено 1 совпадений

// Например условие, чтобы пепер А было минимум 2 символа



$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#[а-яё]{2,6}А[а-яё]*#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

Вася любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => ананасы // перед 2-й "а" - 4 символа, это больше 2
            [1] => корабли
            [2] => папуасы // перед 2-й
        )

)
Найдено 3 совпадений


$text = 'Вася любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
$count = preg_match_all('#Вася\s+[а-яё]+#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';

// Дополнительные сокращения:

\s - воспринимает ПРОБЕЛ + ТАБУЛЯЦИЯ + ПЕРЕНОС СТРОКИ
. <- абсолютно любой символ
\. <- точка
*/

$text = 'Ва_.ся любит ананасы, Петя любит корабли, а на юге живут папуасы';
echo $text.'<br><hr>';
// После В 3 любых символа -> В.{3}
$count = preg_match_all('#В.{3}#ui',$text,$matches);
echo '<pre>'.print_r($matches,1).'<hr>';
echo 'Найдено '.$count.' совпадений';


Ва_.ся любит ананасы, Петя любит корабли, а на юге живут папуасы
Array
(
    [0] => Array
        (
            [0] => Ва_.
            [1] => вут 
        )

)
Найдено 2 совпадений

// Если мы хотим, чтобы повторялось слово 5 раз, берем слово в скобки
(Стас){5} -> СтасСтасСтасСтасСтас - ВЕРНО
СтасСтасСтасАндрей - НЕ ВЕРНО // нужно только 5



























